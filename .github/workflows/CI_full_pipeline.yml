name: Full CI Pipeline

on:
  pull_request:
    branches: [main, develop]
    types: [opened, synchronize, reopened]

permissions:
  pull-requests: write
  contents: read

jobs:
  build-test-analyze:
    name: Build, Test, Coverage and SonarCloud
    working-directory: ./Backend 
    runs-on: ubuntu-latest

    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Cache SonarCloud packages
        uses: actions/cache@v3
        with:
          path: ~/.sonar/cache
          key: ${{ runner.os }}-sonar
          restore-keys: ${{ runner.os }}-sonar

      - name: Build, Test and Analyze
        env:
          SONAR_TOKEN: ${{ secrets.SONAR_TOKEN }}
        run: |
          mvn clean verify \
            sonar:sonar \
            -Dsonar.projectKey=nikcharge-backend \
            -Dsonar.organization=NikCharge \
            -Dsonar.host.url=https://sonarcloud.io \
            -Dsonar.coverage.jacoco.xmlReportPaths=target/site/jacoco/jacoco.xml

      - name: Upload test results
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: test-results
          path: Backend/target/surefire-reports/

      - name: Upload JaCoCo Report
        if: always()
        uses: actions/upload-artifact@v3
        with:
          name: coverage-report
          path: Backend/target/site/jacoco/

  cucumber-tests:
    name: Run Cucumber Tests
    runs-on: ubuntu-latest
    needs: build-test-analyze

    steps:
      - uses: actions/checkout@v3

      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'

      - name: Run Cucumber Tests
        working-directory: ./Backend
        run: mvn verify -P cucumber

  # performance-tests:
  #   name: Run Performance Tests with K6
  #   working-directory: ./Backend
  #   runs-on: ubuntu-latest
  #   needs: build-test-analyze

  #   steps:
  #     - uses: actions/checkout@v3

  #     - name: Install k6
  #       run: |
  #         sudo apt-get update
  #         sudo apt-get install -y gnupg software-properties-common
  #         sudo apt-key adv --keyserver keyserver.ubuntu.com --recv-keys 33B2CBAF
  #         echo "deb https://dl.k6.io/deb stable main" | sudo tee /etc/apt/sources.list.d/k6.list
  #         sudo apt-get update
  #         sudo apt-get install -y k6

  #     - name: Run k6 Load Tests
  #       run: k6 run performance-tests/script.js
