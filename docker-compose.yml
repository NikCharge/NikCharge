version: '3.9'

services:
  maven-build:
    image: maven:3.9-eclipse-temurin-21
    container_name: maven-build
    working_dir: /app
    volumes:
      - ./Backend:/app
    command: mvn package -DskipTests
    restart: "no"

  postgres:
    image: postgres:15
    container_name: postgres
    restart: always
    ports:
      - "5432:5432"
    environment:
      POSTGRES_USER: ${POSTGRES_USER}
      POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
      POSTGRES_DB: admin
    volumes:
      - postgres_data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "${POSTGRES_USER}"]
      interval: 10s
      retries: 5
      start_period: 5s


  backend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/backend:latest
    build:
      context: ./Backend
      dockerfile: Dockerfile.backend
    depends_on:
      maven-build:
        condition: service_completed_successfully
      postgres:
        condition: service_healthy
    ports:
      - "8080:8080"
    environment:
      SPRING_DATASOURCE_URL: "jdbc:postgresql://postgres:5432/admin"
      SPRING_DATASOURCE_USERNAME: "${POSTGRES_USER}"
      SPRING_DATASOURCE_PASSWORD: "${POSTGRES_PASSWORD}"
      SPRING_JPA_HIBERNATE_DDL_AUTO: "update"
      SPRING_JPA_SHOW_SQL: "true"
      SPRING_JPA_PROPERTIES_HIBERNATE_FORMAT_SQL: "true"
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/actuator/health"]
      interval: 30s
      retries: 3
      start_period: 10s

  frontend:
    image: ghcr.io/${GITHUB_REPOSITORY_OWNER}/frontend:latest
    build:
      context: ./frontend
      dockerfile: Dockerfile.frontend
    ports:
      - "3000:80"
    depends_on:
      - backend

  nginx:
    image: nginx:1.25
    container_name: nginx
    depends_on:
      - frontend
      - backend
    ports:
      - "80:80"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
    restart: always

volumes:
  postgres_data:
    driver: local
 
